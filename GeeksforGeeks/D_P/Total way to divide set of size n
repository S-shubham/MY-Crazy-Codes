// DP approach to find the no of ways to dividing a set of size n into k different sub sets

#include<bits/stdc++.h>
using namespace std;



int findc(int n,int k)
{
	int dp[n+1][k+1];
	
	for(int i=0;i<=n;i++)
	dp[i][0]=0;
	for(int i=0;i<=k;i++)
	dp[0][k]=0;
	
	for(int i=1;i<=n;i++)
	for(int j=1;j<=i;j++)
	{
		if(j==1||j==i)
		dp[i][j]=1;
		else
		dp[i][j]=j*dp[i-1][j]+dp[i-1][j-1];
		
	}
	
	cout<<"\nPrinting the whole table for you shu ::)";
	int sum=0;
	for(int i=0;i<=n;i++)
	{
		sum=sum+dp[n][i];
	}
	
	return sum;
}

int main()
{
	
	cout<<"\nways are : "<<findc(5,5);
}
