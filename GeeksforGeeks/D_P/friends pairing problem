https://www.geeksforgeeks.org/friends-pairing-problem/


...................................This is a recurrence solution...................................................

// Friends pairing problem
// The recurrence relation for this is : f(n)=f(n-1)+(n-1)*f(n-2) 
// first either he remains single or second if he chooses to make a pair then he has (n-1) choices to make a pair

// I have come up with this base case that if(n<=2) return n;


#include<bits/stdc++.h>
using namespace std;

int solve(int n)
{
	if(n<=2)
	return n;
	return solve(n-1)+(n-1)*solve(n-2);
}

int main()
{
	int n=8;
	cout<<"\nTotal ways are: "<<solve(n);
}

.......................................................DP Solution...................................


// Friends pairing problem
// The recurrence relation for this is : f(n)=f(n-1)+(n-1)*f(n-2) 
// first either he remains single or second if he chooses to make a pair then he has (n-1) choices to make a pair

// I have come up with this base case that if(n<=2) return n;


#include<bits/stdc++.h>
using namespace std;

int solve(int n)
{
	int dp[n+1];
	
	for(int i=0;i<=n;i++)
	{
		if(i<=2)
		dp[i]=i;
		else
		dp[i]=dp[i-1]+(i-1)*dp[i-2];
	}
	return dp[n];
}

int main()
{
	int n=8;
	cout<<"\nTotal ways are: "<<solve(n);
}
