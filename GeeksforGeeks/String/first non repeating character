https://www.geeksforgeeks.org/given-a-string-find-its-first-non-repeating-character/


..........................................................................................
//Done in just one traversal

#include<bits/stdc++.h>
using namespace std;

struct tracker{
	int pos;
	int count;
};

int main()
{
	string str="GeeksforGeeks";
	tracker arr[26];
	for(int i=0;i<26;i++)
	{
		arr[i].pos=INT_MAX;
		arr[i].count=0;
	}
	
	int i=0;
	while(str[i]!='\0')
	{
		int index;
		if(str[i]>='A' && str[i]<='Z')
		index=str[i]-'A';
		else
		index=str[i]-'a';
		if(arr[index].count==0)
		{
			arr[index].count=1;
			arr[index].pos=i;
			
		}
		else
		++arr[index].count;
		++i;
	}
	int min=INT_MAX;
	for(int i=0;i<26;i++)
	{
		if(arr[i].count==1 && arr[i].pos<min)
		min=arr[i].pos;
		
	}
	if(min==INT_MAX)
	cout<<"\nAll characters are being repeated !!!!!";
	else
	cout<<str[min];
}


..................................................O(n) O(1)............................

#include<bits/stdc++.h>
using namespace std;

int main()
{
	string str="GeeksforGeeks";
	int arr[26]={0};
	int i=0;
	while(str[i]!='\0')
	{
		int index;
		if(str[i]>='A' && str[i]<='Z')
		index=str[i]-'A';
		else
		index=str[i]-'a';
		
		++arr[index];
		++i;
	}
	i=0;
	while(str[i]!='\0')
	{
		int index;
		if(str[i]>='A' && str[i]<='Z')
		index=str[i]-'A';
		else
		index=str[i]-'a';
		
		if(arr[index]==1)
		{
			cout<<str[i];
			break;
		}
		++i;
		
	}
	if(str[i]=='\0')
	cout<<"\nAll characters are being repeated !!!!!";
}
