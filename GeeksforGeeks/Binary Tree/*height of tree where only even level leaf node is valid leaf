https://www.geeksforgeeks.org/height-binary-tree-considering-even-level-leaves/



....................................................................................

/* Program to find height of the tree considering
only even level leaves. */
#include <bits/stdc++.h>
using namespace std;

/* A binary tree node has data, pointer to
left child and a pointer to right child */
struct Node {
	int data;
	struct Node* left;
	struct Node* right;
};

void heightOfTreeUtil(Node* root, int cur,int &max)
{
    if(cur>max && cur%2==0)
    max=cur;
    if(root->left)
    heightOfTreeUtil(root->left,cur+1,max);
    if(root->right)
    heightOfTreeUtil(root->right,cur+1,max);
    
    
}

/* Helper function that allocates a new node with the
given data and NULL left and right pointers. */
struct Node* newNode(int data)
{
	struct Node* node = 
			(struct Node*)malloc(sizeof(struct Node));
	node->data = data;
	node->left = NULL;
	node->right = NULL;

	return (node);
}

int heightOfTree(Node* root)
{
    int curr=1,max=0;
	 heightOfTreeUtil(root, curr,max);
	 return max;
}

/* Driver program to test above functions*/
int main()
{
	// Let us create binary tree shown in above diagram
	struct Node* root = newNode(1);

	root->left = newNode(2);
	root->right = newNode(3);
	root->left->left = newNode(4);
	root->left->right = newNode(5);
	root->left->right->left = newNode(6);
	cout << "Height of tree is " << heightOfTree(root);
	return 0;
}
